<div class="transicao">
	<svg
		width="100%"
		height="100%"
		viewBox="0 0 323.52756 204.01889"
		version="1.1"
		id="svg5"
		xmlns="http://www.w3.org/2000/svg"
		xmlns:svg="http://www.w3.org/2000/svg"
		preserveAspectRatio="none">
		<defs
		  id="defs2" />
		<g
		  id="layer1">
		  <rect
			style="fill: #EFD39F;fill-opacity:1;stroke-width:1.05"
			id="rect2721"
			width="323.52756"
			height="204.01889"
			x="0"
			y="0" />
		  <path
			id="rect451"
			style="fill:#356bb2;stroke-width:1.05;fill-opacity:1"
			d="m 0,0 h 323.52756 l -10e-6,102.00945 c 0,0 0,-102.0094472655646 -161.76377,0 C 0,204.0189 0,102.00945 0,102.00945 Z" />
	  </g>
</svg>
</div>
<div class="container" id="container">
    <div class="form-container sign-up">
        <form>
            <h1>Registre-se</h1>
            
            <input id="inputNomeC" type="text" placeholder="Nome">
            <input id="inputEmailC" type="email" placeholder="Email">
			<input id="inputSenhaC" type="password" placeholder="Senha">
			<input id="inputDataC" type="date" placeholder="Nascimento">
            <button type="button" onclick="criarCadastro()">Registrar</button>
        </form>
    </div>
    <div class="form-container sign-in">
        <form>
            <h1>Entre</h1>
            <input id="inputEmailE" type="email" placeholder="Email">
            <input id="inputSenhaE" type="password" placeholder="Senha">
            <a href="#">Esqueci minha senha</a>
            <button>LogIn</button>
        </form>
    </div>
    <div class="toggle-container">
        <div class="toggle">
            <div class="toggle-panel toggle-left">
                <h1>Já tem uma conta?</h1>
                <p class="branco">Clique abaixo para acessá-la</p>
                <button class="" id="login">Fazer login</button>
            </div>
            <div class="toggle-panel toggle-right">
                <h1>Ainda não tem uma conta?</h1>
                <p class="branco"	>Cadastre-se para ter acesso completo!</p>
                <button class="" id="register">Cadastre-se</button>
            </div>
        </div>
    </div>
</div>
<div class="transicao">
	<svg
		width="100%"
		height="100%"
		viewBox="0 0 323.52756 204.01889"
		version="1.1"
		id="svg5"
		xmlns="http://www.w3.org/2000/svg"
		xmlns:svg="http://www.w3.org/2000/svg"
		preserveAspectRatio="none">
		<defs
		  id="defs2" />
		<g
		  id="layer1">
		  <rect
			style="fill: black;fill-opacity:1;stroke-width:1.05"
			id="rect2721"
			width="323.52756"
			height="204.01889"
			x="0"
			y="0" />
		  <path
			id="rect451"
			style="fill:#EFD39F;stroke-width:1.05;fill-opacity:1"
			d="m 0,0 h 323.52756 l -10e-6,102.00945 c 0,0 0,-102.0094472655646 -161.76377,0 C 0,204.0189 0,102.00945 0,102.00945 Z" />
	  </g>
</svg>
</div>

<script>
    const container = document.getElementById('container');
	const registerBtn = document.getElementById('register');
	const loginBtn = document.getElementById('login');

	registerBtn.addEventListener('click', () => {
		container.classList.add("active");
	});

	loginBtn.addEventListener('click', () => {
		container.classList.remove("active");
	}); 

	async function criarCadastro() {
		let nomeC = (document.getElementById("inputNomeC")).value.normalize().trim()
		let emailC = (document.getElementById("inputEmailC")).value.normalize().trim()
		let senhaC = (document.getElementById("inputSenhaC")).value.normalize().trim()
		let dataC = (document.getElementById("inputDataC")).value.trim()

		if (!nomeC){
			console.log("Nome completo vazio!")
			Swal.fire({
				title: "Atenção!",
				type: 'warning',
				text: "Nome completo vazio.",
				icon: "warning",
				confirmButtonColor: "rgb(245, 245, 245)"
			});
			return;
		} 
		else {
			console.log("Nome: " + nomeC);
		};
		if (!emailC){
			console.log("E-mail está vazio!")
			Swal.fire({
				title: "Atenção!",
				type: 'warning',
				text: "E-mail está vazio.",
				icon: "warning",
				confirmButtonColor: "rgb(245, 245, 245)"
			});
			return;
		} 
		else {
			console.log("E-mail: " + emailC);
		};
		if (!senhaC){
			console.log("Senha está vazia!")
			Swal.fire({
				title: "Atenção!",
				type: 'warning',
				text: "Senha está vazia.",
				icon: "warning",
				confirmButtonColor: "rgb(245, 245, 245)"
			});
			return;
		} 
		else {
			console.log("Senha: " + senhaC);
		};
		if (!dataC){
			console.log("Data de nascimento está vazia!")
			Swal.fire({
				title: "Atenção!",
				type: 'warning',
				text: "Data de nascimento está vazia.",
				icon: "warning",
				confirmButtonColor: "rgb(245, 245, 245)"
			});
			return;
		} 
		else {
			console.log("Data: " + dataC);
		};
		let cliente = {
			usuNome: nomeC,
			usuMail: emailC,
			usuPass: senhaC,
			usuNasc: dataC
		};
		
		try {
			let response = await fetch("/criarUsuario", {
				method: "POST",
				body: JSON.stringify(cliente),
				headers: {
					"content-type": "application/json"
				}
			});
			console.log(response.body)
			console.log(response.status)
			if (!response.ok) {
				console.log("Ocorreu um erro ao se criar o cadastro.");
				Swal.fire({
					title: "Oops..☠☠☠ ",
					text: "Ocorreu um erro ao se cadastrar",
					icon: "error",
					confirmButtonColor: "whitesmoke"
				});
				return;
			}

			nomeC.value = "";
			emailC.value = "";
			senhaC.value = "";
			dataC.value = "";

			Swal.fire({
				title: "Parabéns!",
          		text: "Cadastro criado com sucesso!",
          		icon: "success",
          		confirmButtonColor: "#5aa621"
			});
			console.log("Cadastro criado com sucesso!");
		}
		catch (ex) {
			Swal.fire({
				title: "Oops...",
          		text: "Ocorreu um erro de rede ao criar o cliente: " + ex.message,
          		icon: "error",
          		confirmButtonColor: "#b73501"
			});
			console.log("Ocorreu um erro de rede ao criar o cliente " + ex.message);
		}
		
	}

</script>